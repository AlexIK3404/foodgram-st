services:
  db:
    image: postgres:15
    container_name: foodgram-db
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    container_name: foodgram-back
    build:
      context: ../foodgram
    env_file: .env
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ../foodgram:/app           # <— монтируем весь бэкенд прямо в /app
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
    volumes:
      - ../frontend:/app         # чтобы видеть исходники (необязательно)
    command: sh -c "npm install && npm run build"
    depends_on:
      - backend

  proxy:
    image: nginx:1.25.4-alpine
    container_name: foodgram-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../frontend/build:/usr/share/nginx/html:ro
      - ../foodgram/staticfiles:/usr/share/nginx/static:ro
      - ../foodgram/media:/usr/share/nginx/media:ro
    depends_on:
      - backend
      - frontend

volumes:
  pg_data:
